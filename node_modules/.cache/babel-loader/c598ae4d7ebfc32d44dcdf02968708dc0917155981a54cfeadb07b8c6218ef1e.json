{"ast":null,"code":"var _jsxFileName = \"/Users/tuliv/Documents/prompt_manual_eval/src/components/FontRecommendations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ThumbsUp, Minus, ThumbsDown, Award, Tag, Building, Check, CheckCircle } from 'lucide-react';\nimport { saveFontScore, getFontScores } from '../services/api';\n\n// Helper function to generate font preview URL\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst generateFontPreviewUrl = md5 => {\n  const baseUrl = 'https://render.myfonts.net/fonts/font_rend.php';\n  const params = new URLSearchParams({\n    id: md5,\n    rt: 'The quick brown fox jumps over the lazy dog',\n    rs: '30',\n    fg: '000000',\n    t: 'pc',\n    sc: '5',\n    bg: 'FFFFFF',\n    x: '0',\n    y: '0',\n    al: 'left'\n  });\n  return `${baseUrl}?${params.toString()}`;\n};\n\n// Preload images for better performance\nconst preloadImages = recommendations => {\n  recommendations.forEach(font => {\n    const img = new Image();\n    img.src = generateFontPreviewUrl(font.md5);\n  });\n};\nconst FontRecommendations = ({\n  recommendations,\n  prompt,\n  onScoreSaved,\n  refreshTrigger = 0\n}) => {\n  _s();\n  const [scoredFonts, setScoredFonts] = useState(new Set());\n  const [savingStates, setSavingStates] = useState({});\n  const [fontScores, setFontScores] = useState({}); // Track current scores for each font\n  const [showReasonInput, setShowReasonInput] = useState({}); // Track which fonts need reason input\n  const [reasonText, setReasonText] = useState({}); // Store reason text for each font\n  const [imageLoadingStates, setImageLoadingStates] = useState({}); // Track image loading states\n\n  // Load existing feedback for current prompt\n  useEffect(() => {\n    const loadExistingFeedback = async () => {\n      if (!prompt) return;\n      try {\n        const allFeedback = await getFontScores();\n        const currentPromptFeedback = allFeedback.filter(feedback => feedback.promptName === prompt);\n\n        // Update state with existing feedback\n        const newScoredFonts = new Set();\n        const newFontScores = {};\n        currentPromptFeedback.forEach(feedback => {\n          newScoredFonts.add(feedback.md5);\n          // Convert score back to internal format\n          const score = feedback.score === 'Good Match' ? 'good' : feedback.score === 'Average Match' ? 'average' : feedback.score === 'Bad Match' ? 'bad' : feedback.score;\n          newFontScores[feedback.md5] = score;\n        });\n        setScoredFonts(newScoredFonts);\n        setFontScores(newFontScores);\n        // Clear reason input states when data is refreshed\n        setShowReasonInput({});\n        setReasonText({});\n      } catch (error) {\n        console.error('Error loading existing feedback:', error);\n      }\n    };\n    loadExistingFeedback();\n  }, [prompt, refreshTrigger]); // Re-run when prompt changes or refresh is triggered\n\n  // Initialize image loading states and preload images when recommendations change\n  useEffect(() => {\n    const initialLoadingStates = {};\n    recommendations.forEach(font => {\n      initialLoadingStates[font.md5] = true;\n    });\n    setImageLoadingStates(initialLoadingStates);\n\n    // Preload images for better performance\n    preloadImages(recommendations);\n\n    // Set timeout to clear loading states after 5 seconds\n    const timeout = setTimeout(() => {\n      setImageLoadingStates(prev => {\n        const updated = {};\n        Object.keys(prev).forEach(key => {\n          updated[key] = false;\n        });\n        return updated;\n      });\n    }, 5000);\n    return () => clearTimeout(timeout);\n  }, [recommendations]);\n  const handleScore = async (font, score) => {\n    setSavingStates(prev => ({\n      ...prev,\n      [font.md5]: true\n    }));\n    try {\n      const result = await saveFontScore(prompt, font, score);\n      setScoredFonts(prev => new Set([...prev, font.md5]));\n      setFontScores(prev => ({\n        ...prev,\n        [font.md5]: score\n      }));\n\n      // Always update progress count for real-time updates\n      onScoreSaved(font, score);\n    } catch (error) {\n      console.error('Error saving score:', error);\n    } finally {\n      setSavingStates(prev => ({\n        ...prev,\n        [font.md5]: false\n      }));\n    }\n  };\n  const handleScoreWithReason = (font, score) => {\n    if (score === 'average' || score === 'bad') {\n      // Show reason input for average/bad scores\n      setShowReasonInput(prev => ({\n        ...prev,\n        [font.md5]: true\n      }));\n      setFontScores(prev => ({\n        ...prev,\n        [font.md5]: score\n      }));\n    } else {\n      // Hide reason input and direct save for good scores\n      setShowReasonInput(prev => ({\n        ...prev,\n        [font.md5]: false\n      }));\n      setReasonText(prev => ({\n        ...prev,\n        [font.md5]: ''\n      }));\n      setFontScores(prev => ({\n        ...prev,\n        [font.md5]: score\n      }));\n      // Call handleScore directly for good scores - it will handle onScoreSaved\n      handleScore(font, score);\n    }\n  };\n  const handleSubmitReason = async (font, score) => {\n    const reason = reasonText[font.md5] || '';\n    setSavingStates(prev => ({\n      ...prev,\n      [font.md5]: true\n    }));\n    try {\n      const result = await saveFontScore(prompt, font, score, reason);\n      setScoredFonts(prev => new Set([...prev, font.md5]));\n      setShowReasonInput(prev => ({\n        ...prev,\n        [font.md5]: false\n      }));\n      setReasonText(prev => ({\n        ...prev,\n        [font.md5]: ''\n      }));\n\n      // Always update progress count for real-time updates\n      onScoreSaved(font, score);\n    } catch (error) {\n      console.error('Error saving score with reason:', error);\n    } finally {\n      setSavingStates(prev => ({\n        ...prev,\n        [font.md5]: false\n      }));\n    }\n  };\n  const getScoreButton = (font, score, icon, colorClass, isSelected) => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => handleScoreWithReason(font, score),\n    disabled: savingStates[font.md5],\n    className: `flex items-center justify-center w-10 h-10 sm:w-12 sm:h-12 rounded-lg text-sm font-medium transition-all duration-200 ${isSelected ? `${colorClass} ring-2 ring-offset-2 ring-white` : `hover:scale-105 ${colorClass} opacity-70 hover:opacity-100`}`,\n    children: savingStates[font.md5] ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-dots\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isSelected ? /*#__PURE__*/_jsxDEV(Check, {\n        className: \"w-4 h-4 sm:w-5 sm:h-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 35\n      }, this) : icon\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n  const getScoreLabel = score => {\n    switch (score) {\n      case 'good':\n        return 'Good Match';\n      case 'average':\n        return 'Average Match';\n      case 'bad':\n        return 'Bad Match';\n      default:\n        return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-3 sm:space-y-0 mb-4 sm:mb-6 flex-shrink-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"min-w-0 flex-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg sm:text-xl font-bold text-gray-900 mb-1 sm:mb-2\",\n          children: \"Font Recommendations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 text-xs sm:text-sm\",\n          children: [recommendations.length, \" fonts found for \\\"\", prompt, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"badge-simple badge-success text-xs sm:text-sm\",\n          children: [recommendations.length, \" results\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto min-h-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4 sm:gap-6\",\n        children: recommendations.map((font, index) => {\n          var _reasonText$font$md;\n          const currentScore = fontScores[font.md5];\n          const isScored = scoredFonts.has(font.md5);\n          const needsReason = showReasonInput[font.md5];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `card-simple p-4 sm:p-6 transition-all duration-300 relative ${isScored ? 'ring-2 ring-green-400/50 bg-green-50/30' : ''}`,\n            children: [isScored && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute top-3 sm:top-4 right-3 sm:right-4 flex items-center space-x-1 sm:space-x-2 bg-green-100 text-green-800 px-2 sm:px-3 py-1 rounded-full text-xs font-medium\",\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                className: \"w-3 h-3 sm:w-4 sm:h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"hidden sm:inline\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sm:hidden\",\n                children: \"Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-start justify-between mb-3 sm:mb-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1 min-w-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-2 mb-1 sm:mb-2\",\n                  children: [index < 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center justify-center w-5 h-5 sm:w-6 sm:h-6 bg-yellow-400 rounded-full flex-shrink-0\",\n                    children: /*#__PURE__*/_jsxDEV(Award, {\n                      className: \"text-white sm:w-3 sm:h-3\",\n                      size: 10\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold text-gray-900 text-base sm:text-lg truncate\",\n                    children: font.family_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600 text-xs sm:text-sm mb-1 sm:mb-2 truncate\",\n                  children: font.style_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-1 sm:space-x-2 text-xs text-gray-500\",\n                  children: [/*#__PURE__*/_jsxDEV(Building, {\n                    className: \"w-3 h-3 flex-shrink-0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"truncate\",\n                    children: font.foundry_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3 sm:mb-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relative bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\",\n                children: [imageLoadingStates[font.md5] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-center py-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"animate-pulse bg-gray-200 rounded-md w-full h-16\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: generateFontPreviewUrl(font.md5),\n                  alt: `Preview of ${font.family_name}`,\n                  className: `w-full h-auto rounded-md shadow-sm transition-opacity duration-300 ${imageLoadingStates[font.md5] ? 'opacity-0' : 'opacity-100'}`,\n                  loading: \"eager\",\n                  onLoad: () => {\n                    setImageLoadingStates(prev => ({\n                      ...prev,\n                      [font.md5]: false\n                    }));\n                  },\n                  onError: e => {\n                    // Fallback if image fails to load\n                    setImageLoadingStates(prev => ({\n                      ...prev,\n                      [font.md5]: false\n                    }));\n                    e.target.style.display = 'none';\n                    e.target.nextSibling.style.display = 'block';\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"hidden text-center text-gray-500 text-xs sm:text-sm py-4\",\n                  style: {\n                    display: 'none'\n                  },\n                  children: \"Font preview unavailable\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between pt-3 sm:pt-4 border-t border-gray-200\",\n              children: [getScoreButton(font, 'good', /*#__PURE__*/_jsxDEV(ThumbsUp, {\n                className: \"w-5 h-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 41\n              }, this), 'bg-green-500 hover:bg-green-600 text-white', currentScore === 'good'), getScoreButton(font, 'average', /*#__PURE__*/_jsxDEV(Minus, {\n                className: \"w-5 h-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 41\n              }, this), 'bg-yellow-500 hover:bg-yellow-600 text-white', currentScore === 'average'), getScoreButton(font, 'bad', /*#__PURE__*/_jsxDEV(ThumbsDown, {\n                className: \"w-5 h-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 41\n              }, this), 'bg-red-500 hover:bg-red-600 text-white', currentScore === 'bad')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 33\n            }, this), needsReason && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 sm:mt-4 pt-3 sm:pt-4 border-t border-gray-200\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-xs sm:text-sm font-medium text-gray-700\",\n                  children: [\"Please provide a reason for your \", currentScore === 'average' ? 'average' : 'bad', \" rating:\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: reasonText[font.md5] || '',\n                  onChange: e => setReasonText(prev => ({\n                    ...prev,\n                    [font.md5]: e.target.value\n                  })),\n                  placeholder: \"Explain why this font doesn't match well...\",\n                  className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none text-xs sm:text-sm\",\n                  rows: 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleSubmitReason(font, currentScore),\n                    disabled: savingStates[font.md5] || !((_reasonText$font$md = reasonText[font.md5]) !== null && _reasonText$font$md !== void 0 && _reasonText$font$md.trim()),\n                    className: \"px-3 sm:px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed text-xs sm:text-sm font-medium\",\n                    children: savingStates[font.md5] ? 'Submitting...' : 'Submit'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      setShowReasonInput(prev => ({\n                        ...prev,\n                        [font.md5]: false\n                      }));\n                      setReasonText(prev => ({\n                        ...prev,\n                        [font.md5]: ''\n                      }));\n                      setFontScores(prev => ({\n                        ...prev,\n                        [font.md5]: undefined\n                      }));\n                    },\n                    className: \"px-3 sm:px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 text-xs sm:text-sm font-medium\",\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 37\n            }, this)]\n          }, font.md5, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center pt-4 sm:pt-6 border-t border-gray-200 flex-shrink-0\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 text-xs sm:text-sm\",\n        children: \"Rate each font based on how well it matches the prompt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 9\n  }, this);\n};\n_s(FontRecommendations, \"ENCYc9xSTHtx4RCBgh92jEKWur0=\");\n_c = FontRecommendations;\nexport default FontRecommendations;\nvar _c;\n$RefreshReg$(_c, \"FontRecommendations\");","map":{"version":3,"names":["React","useState","useEffect","ThumbsUp","Minus","ThumbsDown","Award","Tag","Building","Check","CheckCircle","saveFontScore","getFontScores","jsxDEV","_jsxDEV","Fragment","_Fragment","generateFontPreviewUrl","md5","baseUrl","params","URLSearchParams","id","rt","rs","fg","t","sc","bg","x","y","al","toString","preloadImages","recommendations","forEach","font","img","Image","src","FontRecommendations","prompt","onScoreSaved","refreshTrigger","_s","scoredFonts","setScoredFonts","Set","savingStates","setSavingStates","fontScores","setFontScores","showReasonInput","setShowReasonInput","reasonText","setReasonText","imageLoadingStates","setImageLoadingStates","loadExistingFeedback","allFeedback","currentPromptFeedback","filter","feedback","promptName","newScoredFonts","newFontScores","add","score","error","console","initialLoadingStates","timeout","setTimeout","prev","updated","Object","keys","key","clearTimeout","handleScore","result","handleScoreWithReason","handleSubmitReason","reason","getScoreButton","icon","colorClass","isSelected","onClick","disabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getScoreLabel","length","map","index","_reasonText$font$md","currentScore","isScored","has","needsReason","size","family_name","style_name","foundry_name","alt","loading","onLoad","onError","e","target","style","display","nextSibling","value","onChange","placeholder","rows","trim","undefined","_c","$RefreshReg$"],"sources":["/Users/tuliv/Documents/prompt_manual_eval/src/components/FontRecommendations.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ThumbsUp, Minus, ThumbsDown, Award, Tag, Building, Check, CheckCircle } from 'lucide-react';\nimport { saveFontScore, getFontScores } from '../services/api';\n\n// Helper function to generate font preview URL\nconst generateFontPreviewUrl = (md5) => {\n    const baseUrl = 'https://render.myfonts.net/fonts/font_rend.php';\n    const params = new URLSearchParams({\n        id: md5,\n        rt: 'The quick brown fox jumps over the lazy dog',\n        rs: '30',\n        fg: '000000',\n        t: 'pc',\n        sc: '5',\n        bg: 'FFFFFF',\n        x: '0',\n        y: '0',\n        al: 'left'\n    });\n    return `${baseUrl}?${params.toString()}`;\n};\n\n// Preload images for better performance\nconst preloadImages = (recommendations) => {\n    recommendations.forEach(font => {\n        const img = new Image();\n        img.src = generateFontPreviewUrl(font.md5);\n    });\n};\n\nconst FontRecommendations = ({ recommendations, prompt, onScoreSaved, refreshTrigger = 0 }) => {\n    const [scoredFonts, setScoredFonts] = useState(new Set());\n    const [savingStates, setSavingStates] = useState({});\n    const [fontScores, setFontScores] = useState({}); // Track current scores for each font\n    const [showReasonInput, setShowReasonInput] = useState({}); // Track which fonts need reason input\n    const [reasonText, setReasonText] = useState({}); // Store reason text for each font\n    const [imageLoadingStates, setImageLoadingStates] = useState({}); // Track image loading states\n\n    // Load existing feedback for current prompt\n    useEffect(() => {\n        const loadExistingFeedback = async () => {\n            if (!prompt) return;\n\n            try {\n                const allFeedback = await getFontScores();\n                const currentPromptFeedback = allFeedback.filter(feedback => feedback.promptName === prompt);\n\n                // Update state with existing feedback\n                const newScoredFonts = new Set();\n                const newFontScores = {};\n\n                currentPromptFeedback.forEach(feedback => {\n                    newScoredFonts.add(feedback.md5);\n                    // Convert score back to internal format\n                    const score = feedback.score === 'Good Match' ? 'good' :\n                        feedback.score === 'Average Match' ? 'average' :\n                            feedback.score === 'Bad Match' ? 'bad' : feedback.score;\n                    newFontScores[feedback.md5] = score;\n                });\n\n                setScoredFonts(newScoredFonts);\n                setFontScores(newFontScores);\n                // Clear reason input states when data is refreshed\n                setShowReasonInput({});\n                setReasonText({});\n            } catch (error) {\n                console.error('Error loading existing feedback:', error);\n            }\n        };\n\n        loadExistingFeedback();\n    }, [prompt, refreshTrigger]); // Re-run when prompt changes or refresh is triggered\n\n    // Initialize image loading states and preload images when recommendations change\n    useEffect(() => {\n        const initialLoadingStates = {};\n        recommendations.forEach(font => {\n            initialLoadingStates[font.md5] = true;\n        });\n        setImageLoadingStates(initialLoadingStates);\n\n        // Preload images for better performance\n        preloadImages(recommendations);\n\n        // Set timeout to clear loading states after 5 seconds\n        const timeout = setTimeout(() => {\n            setImageLoadingStates(prev => {\n                const updated = {};\n                Object.keys(prev).forEach(key => {\n                    updated[key] = false;\n                });\n                return updated;\n            });\n        }, 5000);\n\n        return () => clearTimeout(timeout);\n    }, [recommendations]);\n\n    const handleScore = async (font, score) => {\n        setSavingStates(prev => ({ ...prev, [font.md5]: true }));\n\n        try {\n            const result = await saveFontScore(prompt, font, score);\n            setScoredFonts(prev => new Set([...prev, font.md5]));\n            setFontScores(prev => ({ ...prev, [font.md5]: score }));\n\n            // Always update progress count for real-time updates\n            onScoreSaved(font, score);\n        } catch (error) {\n            console.error('Error saving score:', error);\n        } finally {\n            setSavingStates(prev => ({ ...prev, [font.md5]: false }));\n        }\n    };\n\n    const handleScoreWithReason = (font, score) => {\n        if (score === 'average' || score === 'bad') {\n            // Show reason input for average/bad scores\n            setShowReasonInput(prev => ({ ...prev, [font.md5]: true }));\n            setFontScores(prev => ({ ...prev, [font.md5]: score }));\n        } else {\n            // Hide reason input and direct save for good scores\n            setShowReasonInput(prev => ({ ...prev, [font.md5]: false }));\n            setReasonText(prev => ({ ...prev, [font.md5]: '' }));\n            setFontScores(prev => ({ ...prev, [font.md5]: score }));\n            // Call handleScore directly for good scores - it will handle onScoreSaved\n            handleScore(font, score);\n        }\n    };\n\n    const handleSubmitReason = async (font, score) => {\n        const reason = reasonText[font.md5] || '';\n        setSavingStates(prev => ({ ...prev, [font.md5]: true }));\n\n        try {\n            const result = await saveFontScore(prompt, font, score, reason);\n            setScoredFonts(prev => new Set([...prev, font.md5]));\n            setShowReasonInput(prev => ({ ...prev, [font.md5]: false }));\n            setReasonText(prev => ({ ...prev, [font.md5]: '' }));\n\n            // Always update progress count for real-time updates\n            onScoreSaved(font, score);\n        } catch (error) {\n            console.error('Error saving score with reason:', error);\n        } finally {\n            setSavingStates(prev => ({ ...prev, [font.md5]: false }));\n        }\n    };\n\n    const getScoreButton = (font, score, icon, colorClass, isSelected) => (\n        <button\n            onClick={() => handleScoreWithReason(font, score)}\n            disabled={savingStates[font.md5]}\n            className={`flex items-center justify-center w-10 h-10 sm:w-12 sm:h-12 rounded-lg text-sm font-medium transition-all duration-200 ${isSelected\n                ? `${colorClass} ring-2 ring-offset-2 ring-white`\n                : `hover:scale-105 ${colorClass} opacity-70 hover:opacity-100`\n                }`}\n        >\n            {savingStates[font.md5] ? (\n                <div className=\"loading-dots\">\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </div>\n            ) : (\n                <>\n                    {isSelected ? <Check className=\"w-4 h-4 sm:w-5 sm:h-5\" /> : icon}\n                </>\n            )}\n        </button>\n    );\n\n    const getScoreLabel = (score) => {\n        switch (score) {\n            case 'good': return 'Good Match';\n            case 'average': return 'Average Match';\n            case 'bad': return 'Bad Match';\n            default: return '';\n        }\n    };\n\n    return (\n        <div className=\"h-full flex flex-col\">\n            {/* Header */}\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-3 sm:space-y-0 mb-4 sm:mb-6 flex-shrink-0\">\n                <div className=\"min-w-0 flex-1\">\n                    <h2 className=\"text-lg sm:text-xl font-bold text-gray-900 mb-1 sm:mb-2\">Font Recommendations</h2>\n                    <p className=\"text-gray-600 text-xs sm:text-sm\">\n                        {recommendations.length} fonts found for \"{prompt}\"\n                    </p>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                    <div className=\"badge-simple badge-success text-xs sm:text-sm\">\n                        {recommendations.length} results\n                    </div>\n                </div>\n            </div>\n\n            {/* Font Cards */}\n            <div className=\"flex-1 overflow-y-auto min-h-0\">\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4 sm:gap-6\">\n                    {recommendations.map((font, index) => {\n                        const currentScore = fontScores[font.md5];\n                        const isScored = scoredFonts.has(font.md5);\n                        const needsReason = showReasonInput[font.md5];\n\n                        return (\n                            <div\n                                key={font.md5}\n                                className={`card-simple p-4 sm:p-6 transition-all duration-300 relative ${isScored ? 'ring-2 ring-green-400/50 bg-green-50/30' : ''\n                                    }`}\n                            >\n                                {/* Completion badge */}\n                                {isScored && (\n                                    <div className=\"absolute top-3 sm:top-4 right-3 sm:right-4 flex items-center space-x-1 sm:space-x-2 bg-green-100 text-green-800 px-2 sm:px-3 py-1 rounded-full text-xs font-medium\">\n                                        <CheckCircle className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                                        <span className=\"hidden sm:inline\">Completed</span>\n                                        <span className=\"sm:hidden\">Done</span>\n                                    </div>\n                                )}\n\n                                {/* Header with ranking */}\n                                <div className=\"flex items-start justify-between mb-3 sm:mb-4\">\n                                    <div className=\"flex-1 min-w-0\">\n                                        <div className=\"flex items-center space-x-2 mb-1 sm:mb-2\">\n                                            {index < 3 && (\n                                                <div className=\"flex items-center justify-center w-5 h-5 sm:w-6 sm:h-6 bg-yellow-400 rounded-full flex-shrink-0\">\n                                                    <Award className=\"text-white sm:w-3 sm:h-3\" size={10} />\n                                                </div>\n                                            )}\n                                            <h3 className=\"font-semibold text-gray-900 text-base sm:text-lg truncate\">\n                                                {font.family_name}\n                                            </h3>\n                                        </div>\n                                        <p className=\"text-gray-600 text-xs sm:text-sm mb-1 sm:mb-2 truncate\">{font.style_name}</p>\n                                        <div className=\"flex items-center space-x-1 sm:space-x-2 text-xs text-gray-500\">\n                                            <Building className=\"w-3 h-3 flex-shrink-0\" />\n                                            <span className=\"truncate\">{font.foundry_name}</span>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                {/* Font Preview */}\n                                <div className=\"mb-3 sm:mb-4\">\n                                    <div className=\"relative bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                                        {imageLoadingStates[font.md5] && (\n                                            <div className=\"flex items-center justify-center py-6\">\n                                                <div className=\"animate-pulse bg-gray-200 rounded-md w-full h-16\"></div>\n                                            </div>\n                                        )}\n                                        <img\n                                            src={generateFontPreviewUrl(font.md5)}\n                                            alt={`Preview of ${font.family_name}`}\n                                            className={`w-full h-auto rounded-md shadow-sm transition-opacity duration-300 ${imageLoadingStates[font.md5] ? 'opacity-0' : 'opacity-100'}`}\n                                            loading=\"eager\"\n                                            onLoad={() => {\n                                                setImageLoadingStates(prev => ({ ...prev, [font.md5]: false }));\n                                            }}\n                                            onError={(e) => {\n                                                // Fallback if image fails to load\n                                                setImageLoadingStates(prev => ({ ...prev, [font.md5]: false }));\n                                                e.target.style.display = 'none';\n                                                e.target.nextSibling.style.display = 'block';\n                                            }}\n                                        />\n                                        <div\n                                            className=\"hidden text-center text-gray-500 text-xs sm:text-sm py-4\"\n                                            style={{ display: 'none' }}\n                                        >\n                                            Font preview unavailable\n                                        </div>\n                                    </div>\n                                </div>\n\n\n\n                                {/* Scoring buttons */}\n                                <div className=\"flex items-center justify-between pt-3 sm:pt-4 border-t border-gray-200\">\n                                    {getScoreButton(\n                                        font,\n                                        'good',\n                                        <ThumbsUp className=\"w-5 h-5\" />,\n                                        'bg-green-500 hover:bg-green-600 text-white',\n                                        currentScore === 'good'\n                                    )}\n\n                                    {getScoreButton(\n                                        font,\n                                        'average',\n                                        <Minus className=\"w-5 h-5\" />,\n                                        'bg-yellow-500 hover:bg-yellow-600 text-white',\n                                        currentScore === 'average'\n                                    )}\n\n                                    {getScoreButton(\n                                        font,\n                                        'bad',\n                                        <ThumbsDown className=\"w-5 h-5\" />,\n                                        'bg-red-500 hover:bg-red-600 text-white',\n                                        currentScore === 'bad'\n                                    )}\n                                </div>\n\n                                {/* Reason input for average/bad scores */}\n                                {needsReason && (\n                                    <div className=\"mt-3 sm:mt-4 pt-3 sm:pt-4 border-t border-gray-200\">\n                                        <div className=\"space-y-3\">\n                                            <label className=\"block text-xs sm:text-sm font-medium text-gray-700\">\n                                                Please provide a reason for your {currentScore === 'average' ? 'average' : 'bad'} rating:\n                                            </label>\n                                            <textarea\n                                                value={reasonText[font.md5] || ''}\n                                                onChange={(e) => setReasonText(prev => ({\n                                                    ...prev,\n                                                    [font.md5]: e.target.value\n                                                }))}\n                                                placeholder=\"Explain why this font doesn't match well...\"\n                                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none text-xs sm:text-sm\"\n                                                rows={3}\n                                            />\n                                            <div className=\"flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2\">\n                                                <button\n                                                    onClick={() => handleSubmitReason(font, currentScore)}\n                                                    disabled={savingStates[font.md5] || !reasonText[font.md5]?.trim()}\n                                                    className=\"px-3 sm:px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed text-xs sm:text-sm font-medium\"\n                                                >\n                                                    {savingStates[font.md5] ? 'Submitting...' : 'Submit'}\n                                                </button>\n                                                <button\n                                                    onClick={() => {\n                                                        setShowReasonInput(prev => ({ ...prev, [font.md5]: false }));\n                                                        setReasonText(prev => ({ ...prev, [font.md5]: '' }));\n                                                        setFontScores(prev => ({ ...prev, [font.md5]: undefined }));\n                                                    }}\n                                                    className=\"px-3 sm:px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 text-xs sm:text-sm font-medium\"\n                                                >\n                                                    Cancel\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n\n            {/* Footer */}\n            <div className=\"text-center pt-4 sm:pt-6 border-t border-gray-200 flex-shrink-0\">\n                <p className=\"text-gray-500 text-xs sm:text-sm\">\n                    Rate each font based on how well it matches the prompt\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default FontRecommendations; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}