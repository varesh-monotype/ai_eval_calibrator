{"ast":null,"code":"var _jsxFileName = \"/Users/tuliv/Documents/prompt_manual_eval/src/components/FontRecommendations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ThumbsUp, Minus, ThumbsDown, Award, Tag, Building, Check, CheckCircle } from 'lucide-react';\nimport { saveFontScore, getFontScores } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FontRecommendations = ({\n  recommendations,\n  prompt,\n  onScoreSaved\n}) => {\n  _s();\n  const [scoredFonts, setScoredFonts] = useState(new Set());\n  const [savingStates, setSavingStates] = useState({});\n  const [fontScores, setFontScores] = useState({}); // Track current scores for each font\n  const [showReasonInput, setShowReasonInput] = useState({}); // Track which fonts need reason input\n  const [reasonText, setReasonText] = useState({}); // Store reason text for each font\n\n  const handleScore = async (font, score) => {\n    setSavingStates(prev => ({\n      ...prev,\n      [font.md5]: true\n    }));\n    try {\n      const result = await saveFontScore(prompt, font, score);\n      setScoredFonts(prev => new Set([...prev, font.md5]));\n      setFontScores(prev => ({\n        ...prev,\n        [font.md5]: score\n      }));\n\n      // Only update progress count if it's a new feedback\n      if (result.isNew) {\n        onScoreSaved(font, score);\n      }\n    } catch (error) {\n      console.error('Error saving score:', error);\n    } finally {\n      setSavingStates(prev => ({\n        ...prev,\n        [font.md5]: false\n      }));\n    }\n  };\n  const handleScoreWithReason = (font, score) => {\n    if (score === 'average' || score === 'bad') {\n      // Show reason input for average/bad scores\n      setShowReasonInput(prev => ({\n        ...prev,\n        [font.md5]: true\n      }));\n      setFontScores(prev => ({\n        ...prev,\n        [font.md5]: score\n      }));\n    } else {\n      // Direct save for good scores\n      handleScore(font, score);\n    }\n  };\n  const handleSubmitReason = async (font, score) => {\n    const reason = reasonText[font.md5] || '';\n    setSavingStates(prev => ({\n      ...prev,\n      [font.md5]: true\n    }));\n    try {\n      const result = await saveFontScore(prompt, font, score, reason);\n      setScoredFonts(prev => new Set([...prev, font.md5]));\n      setShowReasonInput(prev => ({\n        ...prev,\n        [font.md5]: false\n      }));\n      setReasonText(prev => ({\n        ...prev,\n        [font.md5]: ''\n      }));\n\n      // Only update progress count if it's a new feedback\n      if (result.isNew) {\n        onScoreSaved(font, score);\n      }\n    } catch (error) {\n      console.error('Error saving score with reason:', error);\n    } finally {\n      setSavingStates(prev => ({\n        ...prev,\n        [font.md5]: false\n      }));\n    }\n  };\n  const getScoreButton = (font, score, icon, colorClass, isSelected) => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => handleScoreWithReason(font, score),\n    disabled: savingStates[font.md5],\n    className: `flex items-center justify-center w-12 h-12 rounded-lg text-sm font-medium transition-all duration-200 ${isSelected ? `${colorClass} ring-2 ring-offset-2 ring-white` : `hover:scale-105 ${colorClass} opacity-70 hover:opacity-100`}`,\n    children: savingStates[font.md5] ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-dots\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isSelected ? /*#__PURE__*/_jsxDEV(Check, {\n        className: \"w-5 h-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 35\n      }, this) : icon\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n  const getScoreLabel = score => {\n    switch (score) {\n      case 'good':\n        return 'Good Match';\n      case 'average':\n        return 'Average Match';\n      case 'bad':\n        return 'Bad Match';\n      default:\n        return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold text-gray-900 mb-2\",\n          children: \"Font Recommendations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 text-sm\",\n          children: [recommendations.length, \" fonts found for \\\"\", prompt, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"badge-simple badge-success\",\n          children: [recommendations.length, \" results\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n      children: recommendations.map((font, index) => {\n        var _reasonText$font$md;\n        const currentScore = fontScores[font.md5];\n        const isScored = scoredFonts.has(font.md5);\n        const needsReason = showReasonInput[font.md5];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card-simple p-6 transition-all duration-300 relative ${isScored ? 'ring-2 ring-green-400/50 bg-green-50/30' : ''}`,\n          children: [isScored && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-4 right-4 flex items-center space-x-2 bg-green-100 text-green-800 px-3 py-1 rounded-full text-xs font-medium\",\n            children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-start justify-between mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2 mb-2\",\n                children: [index < 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-center w-6 h-6 bg-yellow-400 rounded-full\",\n                  children: /*#__PURE__*/_jsxDEV(Award, {\n                    className: \"text-white\",\n                    size: 12\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-semibold text-gray-900 text-lg\",\n                  children: font.family_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-600 text-sm mb-2\",\n                children: font.style_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2 text-xs text-gray-500\",\n                children: [/*#__PURE__*/_jsxDEV(Building, {\n                  className: \"w-3 h-3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: font.foundry_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between pt-4 border-t border-gray-200\",\n            children: [getScoreButton(font, 'good', /*#__PURE__*/_jsxDEV(ThumbsUp, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 37\n            }, this), 'bg-green-500 hover:bg-green-600 text-white', currentScore === 'good'), getScoreButton(font, 'average', /*#__PURE__*/_jsxDEV(Minus, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 37\n            }, this), 'bg-yellow-500 hover:bg-yellow-600 text-white', currentScore === 'average'), getScoreButton(font, 'bad', /*#__PURE__*/_jsxDEV(ThumbsDown, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 37\n            }, this), 'bg-red-500 hover:bg-red-600 text-white', currentScore === 'bad')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), needsReason && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 pt-4 border-t border-gray-200\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: [\"Please provide a reason for your \", currentScore === 'average' ? 'average' : 'bad', \" rating:\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: reasonText[font.md5] || '',\n                onChange: e => setReasonText(prev => ({\n                  ...prev,\n                  [font.md5]: e.target.value\n                })),\n                placeholder: \"Explain why this font doesn't match well...\",\n                className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none\",\n                rows: 3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleSubmitReason(font, currentScore),\n                  disabled: savingStates[font.md5] || !((_reasonText$font$md = reasonText[font.md5]) !== null && _reasonText$font$md !== void 0 && _reasonText$font$md.trim()),\n                  className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed text-sm font-medium\",\n                  children: savingStates[font.md5] ? 'Submitting...' : 'Submit'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    setShowReasonInput(prev => ({\n                      ...prev,\n                      [font.md5]: false\n                    }));\n                    setReasonText(prev => ({\n                      ...prev,\n                      [font.md5]: ''\n                    }));\n                    setFontScores(prev => ({\n                      ...prev,\n                      [font.md5]: undefined\n                    }));\n                  },\n                  className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 text-sm font-medium\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 33\n          }, this)]\n        }, font.md5, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center pt-6 border-t border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 text-sm\",\n        children: \"Rate each font based on how well it matches the prompt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(FontRecommendations, \"FLk6EIStRiR4bj7yCHV0pt9drfQ=\");\n_c = FontRecommendations;\nexport default FontRecommendations;\nvar _c;\n$RefreshReg$(_c, \"FontRecommendations\");","map":{"version":3,"names":["React","useState","useEffect","ThumbsUp","Minus","ThumbsDown","Award","Tag","Building","Check","CheckCircle","saveFontScore","getFontScores","jsxDEV","_jsxDEV","Fragment","_Fragment","FontRecommendations","recommendations","prompt","onScoreSaved","_s","scoredFonts","setScoredFonts","Set","savingStates","setSavingStates","fontScores","setFontScores","showReasonInput","setShowReasonInput","reasonText","setReasonText","handleScore","font","score","prev","md5","result","isNew","error","console","handleScoreWithReason","handleSubmitReason","reason","getScoreButton","icon","colorClass","isSelected","onClick","disabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getScoreLabel","length","map","index","_reasonText$font$md","currentScore","isScored","has","needsReason","size","family_name","style_name","foundry_name","value","onChange","e","target","placeholder","rows","trim","undefined","_c","$RefreshReg$"],"sources":["/Users/tuliv/Documents/prompt_manual_eval/src/components/FontRecommendations.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ThumbsUp, Minus, ThumbsDown, Award, Tag, Building, Check, CheckCircle } from 'lucide-react';\nimport { saveFontScore, getFontScores } from '../services/api';\n\nconst FontRecommendations = ({ recommendations, prompt, onScoreSaved }) => {\n    const [scoredFonts, setScoredFonts] = useState(new Set());\n    const [savingStates, setSavingStates] = useState({});\n    const [fontScores, setFontScores] = useState({}); // Track current scores for each font\n    const [showReasonInput, setShowReasonInput] = useState({}); // Track which fonts need reason input\n    const [reasonText, setReasonText] = useState({}); // Store reason text for each font\n\n    const handleScore = async (font, score) => {\n        setSavingStates(prev => ({ ...prev, [font.md5]: true }));\n\n        try {\n            const result = await saveFontScore(prompt, font, score);\n            setScoredFonts(prev => new Set([...prev, font.md5]));\n            setFontScores(prev => ({ ...prev, [font.md5]: score }));\n\n            // Only update progress count if it's a new feedback\n            if (result.isNew) {\n                onScoreSaved(font, score);\n            }\n        } catch (error) {\n            console.error('Error saving score:', error);\n        } finally {\n            setSavingStates(prev => ({ ...prev, [font.md5]: false }));\n        }\n    };\n\n    const handleScoreWithReason = (font, score) => {\n        if (score === 'average' || score === 'bad') {\n            // Show reason input for average/bad scores\n            setShowReasonInput(prev => ({ ...prev, [font.md5]: true }));\n            setFontScores(prev => ({ ...prev, [font.md5]: score }));\n        } else {\n            // Direct save for good scores\n            handleScore(font, score);\n        }\n    };\n\n    const handleSubmitReason = async (font, score) => {\n        const reason = reasonText[font.md5] || '';\n        setSavingStates(prev => ({ ...prev, [font.md5]: true }));\n\n        try {\n            const result = await saveFontScore(prompt, font, score, reason);\n            setScoredFonts(prev => new Set([...prev, font.md5]));\n            setShowReasonInput(prev => ({ ...prev, [font.md5]: false }));\n            setReasonText(prev => ({ ...prev, [font.md5]: '' }));\n\n            // Only update progress count if it's a new feedback\n            if (result.isNew) {\n                onScoreSaved(font, score);\n            }\n        } catch (error) {\n            console.error('Error saving score with reason:', error);\n        } finally {\n            setSavingStates(prev => ({ ...prev, [font.md5]: false }));\n        }\n    };\n\n    const getScoreButton = (font, score, icon, colorClass, isSelected) => (\n        <button\n            onClick={() => handleScoreWithReason(font, score)}\n            disabled={savingStates[font.md5]}\n            className={`flex items-center justify-center w-12 h-12 rounded-lg text-sm font-medium transition-all duration-200 ${isSelected\n                ? `${colorClass} ring-2 ring-offset-2 ring-white`\n                : `hover:scale-105 ${colorClass} opacity-70 hover:opacity-100`\n                }`}\n        >\n            {savingStates[font.md5] ? (\n                <div className=\"loading-dots\">\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </div>\n            ) : (\n                <>\n                    {isSelected ? <Check className=\"w-5 h-5\" /> : icon}\n                </>\n            )}\n        </button>\n    );\n\n    const getScoreLabel = (score) => {\n        switch (score) {\n            case 'good': return 'Good Match';\n            case 'average': return 'Average Match';\n            case 'bad': return 'Bad Match';\n            default: return '';\n        }\n    };\n\n    return (\n        <div className=\"space-y-6\">\n            {/* Header */}\n            <div className=\"flex items-center justify-between\">\n                <div>\n                    <h2 className=\"text-xl font-bold text-gray-900 mb-2\">Font Recommendations</h2>\n                    <p className=\"text-gray-600 text-sm\">\n                        {recommendations.length} fonts found for \"{prompt}\"\n                    </p>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                    <div className=\"badge-simple badge-success\">\n                        {recommendations.length} results\n                    </div>\n                </div>\n            </div>\n\n            {/* Font Cards */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                {recommendations.map((font, index) => {\n                    const currentScore = fontScores[font.md5];\n                    const isScored = scoredFonts.has(font.md5);\n                    const needsReason = showReasonInput[font.md5];\n\n                    return (\n                        <div\n                            key={font.md5}\n                            className={`card-simple p-6 transition-all duration-300 relative ${isScored ? 'ring-2 ring-green-400/50 bg-green-50/30' : ''\n                                }`}\n                        >\n                            {/* Completion badge */}\n                            {isScored && (\n                                <div className=\"absolute top-4 right-4 flex items-center space-x-2 bg-green-100 text-green-800 px-3 py-1 rounded-full text-xs font-medium\">\n                                    <CheckCircle className=\"w-4 h-4\" />\n                                    <span>Completed</span>\n                                </div>\n                            )}\n\n                            {/* Header with ranking */}\n                            <div className=\"flex items-start justify-between mb-4\">\n                                <div className=\"flex-1\">\n                                    <div className=\"flex items-center space-x-2 mb-2\">\n                                        {index < 3 && (\n                                            <div className=\"flex items-center justify-center w-6 h-6 bg-yellow-400 rounded-full\">\n                                                <Award className=\"text-white\" size={12} />\n                                            </div>\n                                        )}\n                                        <h3 className=\"font-semibold text-gray-900 text-lg\">\n                                            {font.family_name}\n                                        </h3>\n                                    </div>\n                                    <p className=\"text-gray-600 text-sm mb-2\">{font.style_name}</p>\n                                    <div className=\"flex items-center space-x-2 text-xs text-gray-500\">\n                                        <Building className=\"w-3 h-3\" />\n                                        <span>{font.foundry_name}</span>\n                                    </div>\n                                </div>\n                            </div>\n\n\n\n                            {/* Scoring buttons */}\n                            <div className=\"flex items-center justify-between pt-4 border-t border-gray-200\">\n                                {getScoreButton(\n                                    font,\n                                    'good',\n                                    <ThumbsUp className=\"w-5 h-5\" />,\n                                    'bg-green-500 hover:bg-green-600 text-white',\n                                    currentScore === 'good'\n                                )}\n\n                                {getScoreButton(\n                                    font,\n                                    'average',\n                                    <Minus className=\"w-5 h-5\" />,\n                                    'bg-yellow-500 hover:bg-yellow-600 text-white',\n                                    currentScore === 'average'\n                                )}\n\n                                {getScoreButton(\n                                    font,\n                                    'bad',\n                                    <ThumbsDown className=\"w-5 h-5\" />,\n                                    'bg-red-500 hover:bg-red-600 text-white',\n                                    currentScore === 'bad'\n                                )}\n                            </div>\n\n                            {/* Reason input for average/bad scores */}\n                            {needsReason && (\n                                <div className=\"mt-4 pt-4 border-t border-gray-200\">\n                                    <div className=\"space-y-3\">\n                                        <label className=\"block text-sm font-medium text-gray-700\">\n                                            Please provide a reason for your {currentScore === 'average' ? 'average' : 'bad'} rating:\n                                        </label>\n                                        <textarea\n                                            value={reasonText[font.md5] || ''}\n                                            onChange={(e) => setReasonText(prev => ({\n                                                ...prev,\n                                                [font.md5]: e.target.value\n                                            }))}\n                                            placeholder=\"Explain why this font doesn't match well...\"\n                                            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none\"\n                                            rows={3}\n                                        />\n                                        <div className=\"flex space-x-2\">\n                                            <button\n                                                onClick={() => handleSubmitReason(font, currentScore)}\n                                                disabled={savingStates[font.md5] || !reasonText[font.md5]?.trim()}\n                                                className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed text-sm font-medium\"\n                                            >\n                                                {savingStates[font.md5] ? 'Submitting...' : 'Submit'}\n                                            </button>\n                                            <button\n                                                onClick={() => {\n                                                    setShowReasonInput(prev => ({ ...prev, [font.md5]: false }));\n                                                    setReasonText(prev => ({ ...prev, [font.md5]: '' }));\n                                                    setFontScores(prev => ({ ...prev, [font.md5]: undefined }));\n                                                }}\n                                                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 text-sm font-medium\"\n                                            >\n                                                Cancel\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    );\n                })}\n            </div>\n\n            {/* Footer */}\n            <div className=\"text-center pt-6 border-t border-gray-200\">\n                <p className=\"text-gray-500 text-sm\">\n                    Rate each font based on how well it matches the prompt\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default FontRecommendations; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}