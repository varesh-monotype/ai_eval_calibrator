{"ast":null,"code":"var _jsxFileName = \"/Users/tuliv/Documents/prompt_manual_eval/src/components/PromptGrid.js\";\nimport React from 'react';\nimport { RotateCcw } from 'lucide-react';\nimport { prompts } from '../data/prompts';\nimport { resetPromptFeedback } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PromptGrid = ({\n  onPromptClick,\n  selectedPrompt,\n  onResetSuccess\n}) => {\n  const handleReset = async (e, prompt) => {\n    e.stopPropagation(); // Prevent triggering the prompt click\n\n    if (window.confirm(`Are you sure you want to reset all feedback data for \"${prompt}\"? This action cannot be undone.`)) {\n      try {\n        await resetPromptFeedback(prompt);\n        alert(`Feedback data cleared for \"${prompt}\". You can now add fresh feedback.`);\n        if (onResetSuccess) {\n          onResetSuccess(prompt);\n        }\n      } catch (error) {\n        console.error('Error resetting feedback:', error);\n        alert('Failed to reset feedback data. Please try again.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-2\",\n    children: prompts.map((prompt, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `w-full p-3 sm:p-4 rounded-xl transition-all duration-200 ${selectedPrompt === prompt ? 'bg-blue-50 border-2 border-blue-200 shadow-sm' : 'bg-white hover:bg-gray-50 border border-gray-200'}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-start justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 min-w-0\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onPromptClick(prompt),\n            className: \"w-full text-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: `font-medium text-xs sm:text-sm mb-1 ${selectedPrompt === prompt ? 'text-blue-700' : 'text-gray-900'} truncate`,\n              children: prompt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500 text-xs\",\n              children: \"Click to analyze fonts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-2 sm:ml-3 flex-shrink-0 flex items-center space-x-2\",\n          children: [selectedPrompt === prompt && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-2 h-2 bg-blue-500 rounded-full animate-pulse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => handleReset(e, prompt),\n            className: \"p-1 rounded-lg hover:bg-gray-200 transition-colors text-gray-500 hover:text-red-600\",\n            title: \"Reset feedback data for this prompt\",\n            children: /*#__PURE__*/_jsxDEV(RotateCcw, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_c = PromptGrid;\nexport default PromptGrid;\nvar _c;\n$RefreshReg$(_c, \"PromptGrid\");","map":{"version":3,"names":["React","RotateCcw","prompts","resetPromptFeedback","jsxDEV","_jsxDEV","PromptGrid","onPromptClick","selectedPrompt","onResetSuccess","handleReset","e","prompt","stopPropagation","window","confirm","alert","error","console","className","children","map","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","size","_c","$RefreshReg$"],"sources":["/Users/tuliv/Documents/prompt_manual_eval/src/components/PromptGrid.js"],"sourcesContent":["import React from 'react';\nimport { RotateCcw } from 'lucide-react';\nimport { prompts } from '../data/prompts';\nimport { resetPromptFeedback } from '../services/api';\n\nconst PromptGrid = ({ onPromptClick, selectedPrompt, onResetSuccess }) => {\n    const handleReset = async (e, prompt) => {\n        e.stopPropagation(); // Prevent triggering the prompt click\n\n        if (window.confirm(`Are you sure you want to reset all feedback data for \"${prompt}\"? This action cannot be undone.`)) {\n            try {\n                await resetPromptFeedback(prompt);\n                alert(`Feedback data cleared for \"${prompt}\". You can now add fresh feedback.`);\n                if (onResetSuccess) {\n                    onResetSuccess(prompt);\n                }\n            } catch (error) {\n                console.error('Error resetting feedback:', error);\n                alert('Failed to reset feedback data. Please try again.');\n            }\n        }\n    };\n\n    return (\n        <div className=\"space-y-2\">\n            {prompts.map((prompt, index) => (\n                <div\n                    key={index}\n                    className={`w-full p-3 sm:p-4 rounded-xl transition-all duration-200 ${selectedPrompt === prompt\n                        ? 'bg-blue-50 border-2 border-blue-200 shadow-sm'\n                        : 'bg-white hover:bg-gray-50 border border-gray-200'\n                        }`}\n                >\n                    <div className=\"flex items-start justify-between\">\n                        <div className=\"flex-1 min-w-0\">\n                            <button\n                                onClick={() => onPromptClick(prompt)}\n                                className=\"w-full text-left\"\n                            >\n                                <h3 className={`font-medium text-xs sm:text-sm mb-1 ${selectedPrompt === prompt ? 'text-blue-700' : 'text-gray-900'\n                                    } truncate`}>\n                                    {prompt}\n                                </h3>\n                                <p className=\"text-gray-500 text-xs\">\n                                    Click to analyze fonts\n                                </p>\n                            </button>\n                        </div>\n\n                        <div className=\"ml-2 sm:ml-3 flex-shrink-0 flex items-center space-x-2\">\n                            {selectedPrompt === prompt && (\n                                <div className=\"w-2 h-2 bg-blue-500 rounded-full animate-pulse\"></div>\n                            )}\n                            <button\n                                onClick={(e) => handleReset(e, prompt)}\n                                className=\"p-1 rounded-lg hover:bg-gray-200 transition-colors text-gray-500 hover:text-red-600\"\n                                title=\"Reset feedback data for this prompt\"\n                            >\n                                <RotateCcw size={14} />\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default PromptGrid; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}