{"ast":null,"code":"var _jsxFileName = \"/Users/tuliv/Documents/prompt_manual_eval/src/components/PromptGrid.js\";\nimport React from 'react';\nimport { prompts } from '../data/prompts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PromptGrid = ({\n  onPromptClick,\n  selectedPrompt\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 mb-6\",\n      children: \"Font Recommendation Prompts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 xl:grid-cols-5 gap-4\",\n      children: prompts.map((prompt, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => onPromptClick(prompt),\n        className: `\n              p-4 rounded-lg cursor-pointer transition-all duration-200 transform hover:scale-105\n              ${selectedPrompt === prompt ? 'bg-primary-500 text-white shadow-lg' : 'bg-white text-gray-700 hover:bg-primary-50 border border-gray-200 hover:border-primary-300'}\n            `,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm font-medium leading-relaxed\",\n          children: prompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), selectedPrompt === prompt && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 text-xs opacity-90\",\n          children: \"Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = PromptGrid;\nexport default PromptGrid;\nvar _c;\n$RefreshReg$(_c, \"PromptGrid\");","map":{"version":3,"names":["React","prompts","jsxDEV","_jsxDEV","PromptGrid","onPromptClick","selectedPrompt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","prompt","index","onClick","_c","$RefreshReg$"],"sources":["/Users/tuliv/Documents/prompt_manual_eval/src/components/PromptGrid.js"],"sourcesContent":["import React from 'react';\nimport { prompts } from '../data/prompts';\n\nconst PromptGrid = ({ onPromptClick, selectedPrompt }) => {\n    return (\n        <div className=\"p-6\">\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Font Recommendation Prompts</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 xl:grid-cols-5 gap-4\">\n                {prompts.map((prompt, index) => (\n                    <div\n                        key={index}\n                        onClick={() => onPromptClick(prompt)}\n                        className={`\n              p-4 rounded-lg cursor-pointer transition-all duration-200 transform hover:scale-105\n              ${selectedPrompt === prompt\n                                ? 'bg-primary-500 text-white shadow-lg'\n                                : 'bg-white text-gray-700 hover:bg-primary-50 border border-gray-200 hover:border-primary-300'\n                            }\n            `}\n                    >\n                        <div className=\"text-sm font-medium leading-relaxed\">\n                            {prompt}\n                        </div>\n                        {selectedPrompt === prompt && (\n                            <div className=\"mt-2 text-xs opacity-90\">\n                                Selected\n                            </div>\n                        )}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default PromptGrid; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,UAAU,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAe,CAAC,KAAK;EACtD,oBACIH,OAAA;IAAKI,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBL,OAAA;MAAII,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EAAC;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtFT,OAAA;MAAKI,SAAS,EAAC,qEAAqE;MAAAC,QAAA,EAC/EP,OAAO,CAACY,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACvBZ,OAAA;QAEIa,OAAO,EAAEA,CAAA,KAAMX,aAAa,CAACS,MAAM,CAAE;QACrCP,SAAS,EAAE;AACnC;AACA,gBAAgBD,cAAc,KAAKQ,MAAM,GACP,qCAAqC,GACrC,4FAA4F;AAC9H,aACc;QAAAN,QAAA,gBAEUL,OAAA;UAAKI,SAAS,EAAC,qCAAqC;UAAAC,QAAA,EAC/CM;QAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EACLN,cAAc,KAAKQ,MAAM,iBACtBX,OAAA;UAAKI,SAAS,EAAC,yBAAyB;UAAAC,QAAA,EAAC;QAEzC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACR;MAAA,GAjBIG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkBT,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACK,EAAA,GA9BIb,UAAU;AAgChB,eAAeA,UAAU;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}