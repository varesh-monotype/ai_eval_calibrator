{"ast":null,"code":"// Configuration file for all URLs and API endpoints\nconst config = {\n  // API Endpoints\n  API: {\n    // Font recommendations API\n\n    // Font feedback API (for saving and retrieving feedback)\n    FONT_FEEDBACK: '/api/feedback',\n    // IP address service (for analytics)\n    IP_SERVICE: 'https://api.ipify.org?format=json'\n  },\n  // Development settings\n  DEV: {\n    // Base URL for development\n    BASE_URL: process.env.REACT_APP_BASE_URL || 'http://localhost:3000',\n    // API timeout in milliseconds\n    TIMEOUT: 30000,\n    // Retry attempts for failed requests\n    MAX_RETRIES: 3\n  },\n  // Production settings\n  PROD: {\n    // Base URL for production\n    BASE_URL: process.env.REACT_APP_BASE_URL || 'https://your-production-domain.com',\n    // API timeout in milliseconds\n    TIMEOUT: 30000,\n    // Retry attempts for failed requests\n    MAX_RETRIES: 3\n  },\n  // Feature flags\n  FEATURES: {\n    // Enable/disable streaming responses\n    STREAMING_ENABLED: true,\n    // Enable/disable score saving\n    SCORE_SAVING_ENABLED: true,\n    // Enable/disable analytics\n    ANALYTICS_ENABLED: true,\n    // Enable/disable localStorage fallback\n    LOCALSTORAGE_FALLBACK: true\n  },\n  // UI Configuration\n  UI: {\n    // Number of recommendations to show\n    MAX_RECOMMENDATIONS: 20,\n    // Progress update interval (ms)\n    PROGRESS_UPDATE_INTERVAL: 1000,\n    // Animation duration (ms)\n    ANIMATION_DURATION: 300\n  },\n  // User identification for data segregation\n  USER: {\n    // Default user - can be overridden by environment variable\n    EMAIL: process.env.REACT_APP_USER_EMAIL || 'default@example.com',\n    // Charles's specific configuration\n    CHARLES_EMAIL: 'charles@example.com',\n    // Replace with Charles's actual email\n    // User type for data segregation\n    TYPE: process.env.REACT_APP_USER_TYPE || 'default' // 'charles', 'default', etc.\n  }\n};\n\n// Helper function to get current environment config\nconst getConfig = () => {\n  const isDevelopment = process.env.NODE_ENV === 'development';\n  return {\n    ...config,\n    current: isDevelopment ? config.DEV : config.PROD\n  };\n};\n\n// Helper function to get API URL\nexport const getApiUrl = endpoint => {\n  return endpoint;\n};\n\n// Helper function to get external URL\nexport const getExternalUrl = url => {\n  return url;\n};\n\n// Helper function to get user identifier\nexport const getUserIdentifier = () => {\n  return config.USER.EMAIL;\n};\n\n// Helper function to check if current user is Charles\nexport const isCharlesUser = () => {\n  return config.USER.EMAIL === config.USER.CHARLES_EMAIL;\n};\n\n// Helper function to get user-specific data prefix\nexport const getUserDataPrefix = () => {\n  return `user_${config.USER.EMAIL.replace(/[^a-zA-Z0-9]/g, '_')}`;\n};\nexport default config;","map":{"version":3,"names":["config","API","FONT_FEEDBACK","IP_SERVICE","DEV","BASE_URL","process","env","REACT_APP_BASE_URL","TIMEOUT","MAX_RETRIES","PROD","FEATURES","STREAMING_ENABLED","SCORE_SAVING_ENABLED","ANALYTICS_ENABLED","LOCALSTORAGE_FALLBACK","UI","MAX_RECOMMENDATIONS","PROGRESS_UPDATE_INTERVAL","ANIMATION_DURATION","USER","EMAIL","REACT_APP_USER_EMAIL","CHARLES_EMAIL","TYPE","REACT_APP_USER_TYPE","getConfig","isDevelopment","NODE_ENV","current","getApiUrl","endpoint","getExternalUrl","url","getUserIdentifier","isCharlesUser","getUserDataPrefix","replace"],"sources":["/Users/tuliv/Documents/prompt_manual_eval/src/config.js"],"sourcesContent":["// Configuration file for all URLs and API endpoints\nconst config = {\n    // API Endpoints\n    API: {\n        // Font recommendations API\n\n        // Font feedback API (for saving and retrieving feedback)\n        FONT_FEEDBACK: '/api/feedback',\n\n        // IP address service (for analytics)\n        IP_SERVICE: 'https://api.ipify.org?format=json'\n    },\n\n    // Development settings\n    DEV: {\n        // Base URL for development\n        BASE_URL: process.env.REACT_APP_BASE_URL || 'http://localhost:3000',\n\n        // API timeout in milliseconds\n        TIMEOUT: 30000,\n\n        // Retry attempts for failed requests\n        MAX_RETRIES: 3\n    },\n\n    // Production settings\n    PROD: {\n        // Base URL for production\n        BASE_URL: process.env.REACT_APP_BASE_URL || 'https://your-production-domain.com',\n\n        // API timeout in milliseconds\n        TIMEOUT: 30000,\n\n        // Retry attempts for failed requests\n        MAX_RETRIES: 3\n    },\n\n    // Feature flags\n    FEATURES: {\n        // Enable/disable streaming responses\n        STREAMING_ENABLED: true,\n\n        // Enable/disable score saving\n        SCORE_SAVING_ENABLED: true,\n\n        // Enable/disable analytics\n        ANALYTICS_ENABLED: true,\n\n        // Enable/disable localStorage fallback\n        LOCALSTORAGE_FALLBACK: true\n    },\n\n    // UI Configuration\n    UI: {\n        // Number of recommendations to show\n        MAX_RECOMMENDATIONS: 20,\n\n        // Progress update interval (ms)\n        PROGRESS_UPDATE_INTERVAL: 1000,\n\n        // Animation duration (ms)\n        ANIMATION_DURATION: 300\n    },\n\n    // User identification for data segregation\n    USER: {\n        // Default user - can be overridden by environment variable\n        EMAIL: process.env.REACT_APP_USER_EMAIL || 'default@example.com',\n        // Charles's specific configuration\n        CHARLES_EMAIL: 'charles@example.com', // Replace with Charles's actual email\n        // User type for data segregation\n        TYPE: process.env.REACT_APP_USER_TYPE || 'default' // 'charles', 'default', etc.\n    }\n};\n\n// Helper function to get current environment config\nconst getConfig = () => {\n    const isDevelopment = process.env.NODE_ENV === 'development';\n    return {\n        ...config,\n        current: isDevelopment ? config.DEV : config.PROD\n    };\n};\n\n// Helper function to get API URL\nexport const getApiUrl = (endpoint) => {\n    return endpoint;\n};\n\n// Helper function to get external URL\nexport const getExternalUrl = (url) => {\n    return url;\n};\n\n// Helper function to get user identifier\nexport const getUserIdentifier = () => {\n    return config.USER.EMAIL;\n};\n\n// Helper function to check if current user is Charles\nexport const isCharlesUser = () => {\n    return config.USER.EMAIL === config.USER.CHARLES_EMAIL;\n};\n\n// Helper function to get user-specific data prefix\nexport const getUserDataPrefix = () => {\n    return `user_${config.USER.EMAIL.replace(/[^a-zA-Z0-9]/g, '_')}`;\n};\n\nexport default config; "],"mappings":"AAAA;AACA,MAAMA,MAAM,GAAG;EACX;EACAC,GAAG,EAAE;IACD;;IAEA;IACAC,aAAa,EAAE,eAAe;IAE9B;IACAC,UAAU,EAAE;EAChB,CAAC;EAED;EACAC,GAAG,EAAE;IACD;IACAC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,uBAAuB;IAEnE;IACAC,OAAO,EAAE,KAAK;IAEd;IACAC,WAAW,EAAE;EACjB,CAAC;EAED;EACAC,IAAI,EAAE;IACF;IACAN,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,oCAAoC;IAEhF;IACAC,OAAO,EAAE,KAAK;IAEd;IACAC,WAAW,EAAE;EACjB,CAAC;EAED;EACAE,QAAQ,EAAE;IACN;IACAC,iBAAiB,EAAE,IAAI;IAEvB;IACAC,oBAAoB,EAAE,IAAI;IAE1B;IACAC,iBAAiB,EAAE,IAAI;IAEvB;IACAC,qBAAqB,EAAE;EAC3B,CAAC;EAED;EACAC,EAAE,EAAE;IACA;IACAC,mBAAmB,EAAE,EAAE;IAEvB;IACAC,wBAAwB,EAAE,IAAI;IAE9B;IACAC,kBAAkB,EAAE;EACxB,CAAC;EAED;EACAC,IAAI,EAAE;IACF;IACAC,KAAK,EAAEhB,OAAO,CAACC,GAAG,CAACgB,oBAAoB,IAAI,qBAAqB;IAChE;IACAC,aAAa,EAAE,qBAAqB;IAAE;IACtC;IACAC,IAAI,EAAEnB,OAAO,CAACC,GAAG,CAACmB,mBAAmB,IAAI,SAAS,CAAC;EACvD;AACJ,CAAC;;AAED;AACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACpB,MAAMC,aAAa,GAAGtB,OAAO,CAACC,GAAG,CAACsB,QAAQ,KAAK,aAAa;EAC5D,OAAO;IACH,GAAG7B,MAAM;IACT8B,OAAO,EAAEF,aAAa,GAAG5B,MAAM,CAACI,GAAG,GAAGJ,MAAM,CAACW;EACjD,CAAC;AACL,CAAC;;AAED;AACA,OAAO,MAAMoB,SAAS,GAAIC,QAAQ,IAAK;EACnC,OAAOA,QAAQ;AACnB,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAIC,GAAG,IAAK;EACnC,OAAOA,GAAG;AACd,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EACnC,OAAOnC,MAAM,CAACqB,IAAI,CAACC,KAAK;AAC5B,CAAC;;AAED;AACA,OAAO,MAAMc,aAAa,GAAGA,CAAA,KAAM;EAC/B,OAAOpC,MAAM,CAACqB,IAAI,CAACC,KAAK,KAAKtB,MAAM,CAACqB,IAAI,CAACG,aAAa;AAC1D,CAAC;;AAED;AACA,OAAO,MAAMa,iBAAiB,GAAGA,CAAA,KAAM;EACnC,OAAO,QAAQrC,MAAM,CAACqB,IAAI,CAACC,KAAK,CAACgB,OAAO,CAAC,eAAe,EAAE,GAAG,CAAC,EAAE;AACpE,CAAC;AAED,eAAetC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}